{"version":3,"sources":["main.js"],"names":["worker","Worker","canvas","document","querySelector","offscreenCanvas","transferControlToOffscreen","cHeight","height","cWidth","width","audio","audioCtx","window","webkitAudioContext","AudioContext","analyser","createAnalyser","source","createMediaElementSource","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","audioData","getByteTimeDomainData","draw","resume","requestAnimationFrame","getByteFrequencyData","postMessage","msg"],"mappings":";;;AA+BI,aA/BJ,QAAA,eACA,IAAMA,EAAS,IAAIC,OAAO,wCACpBC,EAASC,SAASC,cAAc,UAChCC,EAAkBF,SAASC,cAAc,UAAUE,6BAEnDC,EAAUL,EAAOM,OACjBC,EAASP,EAAOQ,MAChBC,EAAQR,SAASC,cAAc,SACjCQ,EAAW,IAAKC,OAAOC,oBAAsBD,OAAOE,cAEpDC,EAAWJ,EAASK,iBACpBC,EAASN,EAASO,yBAAyBR,GAC/CO,EAAOE,QAAQR,EAASS,aACxBH,EAAOE,QAAQJ,GAEfA,EAASM,QAAU,IACnB,IAAIC,EAAeP,EAASQ,kBACxBC,EAAY,IAAIC,WAAWH,GACzBI,EAAYX,EAASY,sBAAsBH,GAIjD,SAASI,IACLjB,EAASkB,SACQC,sBAAsBF,GAEvCb,EAASgB,qBAAqBP,GAE9BzB,EAAOiC,YAAY,CAACR,UAAAA,EAAWF,aAAAA,IARnCvB,EAAOiC,YAAY,CAACC,IAAK,OAAQhC,OAAQG,GAAkB,CAACA,IAW5DwB","file":"main.js","sourceRoot":"..","sourcesContent":["import './main.scss'; \nconst worker = new Worker('./worker.js');\nconst canvas = document.querySelector('canvas');\nconst offscreenCanvas = document.querySelector('canvas').transferControlToOffscreen(); \n\nconst cHeight = canvas.height;\nconst cWidth = canvas.width;\nconst audio = document.querySelector(\"audio\");\nlet audioCtx = new (window.webkitAudioContext || window.AudioContext)();\n\nlet analyser = audioCtx.createAnalyser();\nlet source = audioCtx.createMediaElementSource(audio);\nsource.connect(audioCtx.destination);\nsource.connect(analyser);\n\nanalyser.fftSize = 256;\nvar bufferLength = analyser.frequencyBinCount;\nvar dataArray = new Uint8Array(bufferLength);\nconst audioData = analyser.getByteTimeDomainData(dataArray);\n\nworker.postMessage({msg: 'init', canvas: offscreenCanvas}, [offscreenCanvas]);\n\nfunction draw() {\n    audioCtx.resume();\n    let drawVisual = requestAnimationFrame(draw);\n\n    analyser.getByteFrequencyData(dataArray);\n\n    worker.postMessage({dataArray, bufferLength});\n};\n\ndraw();"]}